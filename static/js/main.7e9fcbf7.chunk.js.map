{"version":3,"sources":["actions.jsx","tasks.jsx","create.jsx","login.jsx","edit.jsx","App.js","index.js","reducer.jsx"],"names":["addTasks","tasks","type","addToken","token","deleteToken","addId","id","Tasks","props","state","page","sort_field","sort_direction","task","this","fetchTasks","actPage","sortField","sortDirection","sort_fieldUrl","sort_directionUrl","pageUrl","url","fetch","method","mode","cache","referrer","then","res","json","result","message","setState","total_task_count","error","alert","pageNumber","selected","e","target","value","store","getState","className","to","name","onChange","onChangeSort_field","onChangeSort_direction","style","width","map","key","username","email","text","status","pageCount","Math","ceil","pageRangeDisplayed","marginPagesDisplayed","initialPage","onPageChange","handlePageChange","activeClassName","containerClassName","disabledClassName","React","Component","Create","reqBody","FormData","onChangeUsername","bind","onChangeEmail","onChangeText","handleSubmit","get","body","window","location","href","JSON","stringify","catch","set","onSubmit","Login","onChangePassword","Edit","find","elem","pathname","substr","onChangeStatus","deleteTask","localStorage","getItem","App","currentState","setItem","Fragment","handleOut","exact","path","render","connect","actions","oldState","parse","err","console","log","loadState","createStore","action","subscribe","saveState","document","getElementById"],"mappings":"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","file":"static/js/main.7e9fcbf7.chunk.js","sourcesContent":["const addTasks = (tasks) => {\n  return {\n    type: 'ADD_TASKS',\n    tasks,\n  }\n};\n\nconst addToken = (token) => {\n  return {\n    type: 'ADD_TOKEN',\n    token,\n  }\n};\n\nconst deleteToken = (token) => {\n  return {\n    type: 'DELETE_TOKEN',\n    token,\n  }\n};\n\nconst addId = (id) => {\n  return {\n    type: 'ADD_ID',\n    id,\n  }\n};\n \nexport { addToken, deleteToken, addTasks, addId };\n","import React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { Link } from 'react-router-dom'\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      sort_field: 'id',\n      sort_direction: 'asc',\n      task: this.props.task,\n      tasks: this.props.tasks,\n    };\n  }\n  \n  componentDidMount() {\n    this.fetchTasks();\n    \n  }\n  \n  fetchTasks(actPage, sortField, sortDirection ) {\n    const { page, sort_field, sort_direction } = this.state;\n    const sort_fieldUrl = `&sort_field=${sortField || sort_field}`;\n    const sort_directionUrl = `&sort_direction=${sortDirection || sort_direction}`;\n    const pageUrl = `&page=${actPage || page}`;\n    const url = `https://uxcandy.com/~shapoval/test-task-backend/v2/?developer=VladimirOleynik${sort_fieldUrl}${sort_directionUrl}${pageUrl}`;\n    fetch(url, {\n      method: 'GET',\n      mode: 'cors', \n      cache: 'no-cache', \n      referrer: '',\n    }).then(res => res.json())\n      .then(result => {\n          this.props.addTasks(result.message.tasks);\n          this.setState({\n            total_task_count: result.message.total_task_count,\n            tasks: result.message.tasks\n          });\n        },\n        (error) => {\n          alert(error);\n        }\n      );\n  }\n  \n  handlePageChange(pageNumber) {\n    this.setState({ page: pageNumber.selected + 1 });\n    this.fetchTasks(pageNumber.selected + 1);\n  \n  }\n   \n  onChangeSort_field(e) {\n    this.setState({ sort_field: e.target.value });\n    this.fetchTasks('', e.target.value);\n  }\n  \n  onChangeSort_direction(e) {\n    this.setState({ sort_direction: e.target.value });  \n    this.fetchTasks('', '', e.target.value);\n  }\n\n\n  \n  render() {\n    const { tasks, total_task_count, page } = this.state;\n    const token = this.props.store.getState().token;\n    return (\n    <div>\n      <div className=\"data-item\">\n        <h3>Список Задач</h3>\n        <Link to=\"/create\">Добавить задачу</Link>\n        <form name=\"sort\">\n          <select onChange={(e) => this.onChangeSort_field(e)} name=\"sort_field\">\n            <option value=\"id\">id</option> \n            <option value=\"username\">username</option>\n            <option value=\"email\">email</option>\n            <option value=\"status\">status</option>\n          </select>\n          <select onChange={(e) => this.onChangeSort_direction(e)} name=\"sort_direction\">\n            <option value=\"asc\">по возрастанияю</option> \n            <option value=\"desc\">по убыванию</option>\n          </select>\n        </form>\n        <div style={{ width: '50%' }}> \n          {tasks &&\n            tasks.map(task => {\n              return (\n                <div key={task.id} className=\"tasks-item\">\n                  <div>{task.username}</div>\n                  <div>{task.email}</div>\n                  <div className=\"text-item\">{task.text}</div>\n                  {\n                    task.status === 10 ? \n                      <div>Done</div> :\n                      <div>To do</div>\n                  }\n                  {\n                    token &&\n                    <Link to={`/edit/${task.id}`}>Отредактировать задачу</Link>\n                  }\n                  {this.props.id == task.id &&\n                  <div>Отредактировано Администратором</div>\n                  \n                  }\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n        <ReactPaginate\n          pageCount={Math.ceil(total_task_count / 3)}\t\n          pageRangeDisplayed={2}\t\n          marginPagesDisplayed={1}\n          initialPage={page - 1}\n          onPageChange={(e) => this.handlePageChange(e)}\n          activeClassName=\"active-page\"\n          containerClassName=\"Paginaton\"\n          disabledClassName=\"prev-next\"\n        />\n      </div>\n    )\n  }\n}\n    \nexport default Tasks; \n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Create extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      reqBody: new FormData(),\n    };\n    \n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\nhandleSubmit() {\n  if (!this.state.reqBody.get('username') ||\n    !this.state.reqBody.get('email') ||\n    !this.state.reqBody.get('text')) {\n      alert('Заполните все поля');\n      return;\n  }\n  fetch('https://uxcandy.com/~shapoval/test-task-backend/v2/create?developer=VladimirOleynik', {\n      method: 'POST',\n      mode: 'cors', \n      cache: 'no-cache', \n      referrer: '',\n      body: this.state.reqBody,\n    })\n    .then(res => res.json())\n    .then(result => {\n      if (result && result.status === 'ok') {\n        alert('Задача cоздана');\n        window.location.href = '/'\n      } else {\n        alert(JSON.stringify(result.message))\n      }\n    }).catch(error => {\n    alert('Ошибка попробуйте еще раз' + error);\n  });\n }\n\nonChangeUsername(e) {\n  const { reqBody } = this.state;\n  reqBody.set('username', e.target.value);\n  this.setState({ reqBody: reqBody });  \n}\n\nonChangeEmail(e) {\n  const { reqBody } = this.state;\n  reqBody.set('email', e.target.value);\n  this.setState({ reqBody: reqBody });\n}\n\nonChangeText(e) {\n  const { reqBody } = this.state;\n  reqBody.set('text', e.target.value);\n  this.setState({ reqBody: reqBody });\n}\n  \n  render() {\n    return (\n      <div>\n        <h3>Добавление задачи</h3>\n        <form onSubmit={this.handleSubmit} name=\"create\">\n          <label>Логин:</label>\n          <input onChange={this.onChangeUsername} />\n          <label>Email:</label>\n          <input onChange={this.onChangeEmail} />\n          <label>Текст:</label>\n          <input onChange={this.onChangeText} />\n          <input type=\"submit\" value=\"Отправить\" />\n        </form>\n        <Link to=\"/\">К списку задач</Link>\n      </div>\n    )\n  }\n}\n\nexport default Create;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      reqBody: new FormData(),\n    };\n    \n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\nhandleSubmit() {\n  if (!this.state.reqBody.get('username') ||\n    !this.state.reqBody.get('password')) {\n      alert('Заполните все поля');\n      return;\n  }\n  fetch('https://uxcandy.com/~shapoval/test-task-backend/v2/login?developer=VladimirOleynik', {\n      method: 'POST',\n      mode: 'cors', \n      cache: 'no-cache', \n      referrer: '',\n      body: this.state.reqBody,\n    }).then(res => res.json())\n    .then(result => {\n      if (result && result.status === 'ok') {\n        this.props.addToken(result.message.token);\n        window.location.href = '/'\n      } else {\n        alert(JSON.stringify(result.message));\n      }\n    })\n    .catch(error => alert('Ошибка попробуйте еще раз'));\n  \n }\n\nonChangeUsername(e) {\n  const { reqBody } = this.state;\n  reqBody.set('username', e.target.value);\n  this.setState({ reqBody: reqBody });  \n}\n\nonChangePassword(e) {\n  const { reqBody } = this.state;\n  reqBody.set('password', e.target.value);\n  this.setState({ reqBody: reqBody });\n}\n  \n  render() {\n    return (\n      <div>\n        <h3>Авторизация</h3>\n        <form onSubmit={this.handleSubmit} name=\"login\">\n          <label>Логин:</label>\n          <input onChange={this.onChangeUsername} />\n          <label>Пароль:</label>\n          <input onChange={this.onChangePassword} />\n          <input type=\"submit\" value=\"Отправить\" />\n        </form>\n        <Link to=\"/\">К списку задач</Link>\n      </div>\n    )\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      reqBody: new FormData(),\n    };\n    \n    const task = this.props.tasks.find((elem) => {\n      const id = window.location.pathname.substr(6);\n      return elem.id == id;\n    });\n    this.state.task = task;\n    \n    this.state.reqBody.set('status', task.status);\n    \n    this.onChangeStatus = this.onChangeStatus.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \ncomponentDidUnmount() {\n  this.props.deleteTask();\n}\n  \nhandleSubmit() {\nconst { reqBody } = this.state;\nconst currentState = window.localStorage.getItem('appState');\nconst token = currentState.token;\nreqBody.set('token', token);\n  fetch(`https://uxcandy.com/~shapoval/test-task-backend/v2/edit/${this.state.task.id}?developer=VladimirOleynik`, {\n    method: 'POST',\n    mode: 'cors', \n    cache: 'no-cache', \n    referrer: '',\n    body: reqBody,\n  }).then(res => res.json())\n  .then(result => {\n      if (result && result.status === 'ok') {\n        alert('Задача отредактирована');\n        window.location.href = '/'\n      } else {\n        alert(JSON.stringify(result.message));\n        window.location.href = '/login';\n      }\n    })\n    .catch(error => {\n      alert('Ошибка попробуйте еще раз');\n    });\n   }\n  \n  onChangeStatus(e) {\n    const { reqBody } = this.state;\n    reqBody.set('status', e.target.value);\n    this.setState({ reqBody: reqBody });\n  }\n  \n  onChangeText(e) {\n    const { reqBody, task } = this.state;\n    reqBody.set('text', e.target.value);\n    this.setState({ reqBody: reqBody });\n    this.props.addId(task.id);\n  }\n  \n  \n  \n  render() {\n  const { task, reqBody } = this.state;\n  const text = reqBody.get('text') || task.text;\n    return (\n      <div>\n        <h3>Отредактировать Задачу</h3>\n        <div>\n          <div>{task.id}</div>\n          <div>{task.username}</div>\n          <div>{task.email}</div>\n        </div>\n        <form onSubmit={this.handleSubmit} >\n          <label>Текст:</label>\n          <input type=\"text\" name=\"text\" onChange={this.onChangeText} value={text}/>\n          <label>Статус задачи:</label>\n          {task.status === 0 ?\n          <select onChange={this.onChangeStatus}>\n            <option value=\"0\">To do</option>\n            <option value=\"10\">Done</option>\n          </select> :\n          <select onChange={this.onChangeStatus}>\n            <option value=\"0\">To do</option>\n            <option value=\"10\" selected>Done</option>\n          </select>\n          }\n          <input type=\"submit\" value=\"Отредактировать\" />\n        </form>\n        <Link to=\"/\">К списку задач</Link>\n      </div>\n    )\n  }\n}\n\nexport default Edit; \n        \n","import React from 'react'\nimport { Route, Switch, Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport * as actions from './actions';\nimport Tasks from './tasks'\nimport Create from './create'\nimport Login from './login'\nimport Edit from './edit'\nimport './App.css'\n\nclass App extends React.Component {\n  \n  handleOut() {\n    this.props.deleteToken();\n    const currentState = window.localStorage.getItem('appState');\n    delete currentState.token;\n    window.localStorage.setItem('appState', currentState);\n  }\n  \n  render() {\n    const token = this.props.store.getState().token;\n    return (\n        <React.Fragment>\n          {token ?\n            <form onSubmit={() => this.handleOut()} name=\"out\">\n              <input type=\"submit\" value=\"Выйти\"/>\n            </form> :\n            <Link to=\"/login\">Войти</Link>\n          }\n          <Switch>\n            <Route exact path=\"/\" render={(props) => ( <Tasks {...this.props}/>)} />\n            <Route exact path=\"/create\" render={(props) => <Create {...this.props} />} />\n            <Route exact path=\"/edit/:id\" render={(props) => <Edit {...this.props} />} />\n            <Route exact path=\"/login\" render={(props) => <Login {...this.props} />} />\n          </Switch>\n        </React.Fragment>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.tasks,\n    id: state.id,\n  };\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\nimport { BrowserRouter } from 'react-router-dom'\nimport reducer from './reducer';\nimport App from './App'\nimport './index.css'\n\nconst saveState = (state) => {\n  try {\n    const currentState = JSON.stringify(state);\n    window.localStorage.setItem('appState', currentState);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst loadState = () => {\n  try {\n    const currentState = window.localStorage.getItem('appState');\n      if (!currentState) {\n        return undefined;\n      }\n      return JSON.parse(currentState);\n    } catch (err) {\n      console.log(err);\n      return undefined;\n    }\n};\n\nconst oldState = loadState();\nconst store = createStore(reducer, oldState);\n\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App store={store}/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","\n\nexport default (state = {}, action) => {\n  switch (action.type) {      \n    case 'ADD_TASKS':\n        return { ...state, tasks: action.tasks };\n\n    case 'ADD_TOKEN':\n      return { ...state, token: action.token };\n\n    case 'DELETE_TOKEN':\n      if (!state.token) {\n        return { ...state }\n      }\n      delete state.token;\n      return { ...state };\n      \n      case 'ADD_ID':\n        return { ...state, id: action.id };\n          \n    default:\n      return state;\n  }\n}\n"],"sourceRoot":""}