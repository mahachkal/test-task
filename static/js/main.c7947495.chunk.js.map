{"version":3,"sources":["actions.jsx","tasks.jsx","create.jsx","login.jsx","edit.jsx","App.js","index.js","reducer.jsx"],"names":["addTasks","tasks","type","addToken","token","deleteToken","addId","id","Tasks","props","state","page","sort_field","sort_direction","task","this","fetchTasks","actPage","sortField","sortDirection","sort_fieldUrl","sort_directionUrl","pageUrl","url","fetch","method","mode","cache","referrer","then","res","json","result","message","setState","total_task_count","error","alert","pageNumber","selected","e","target","value","currentState","window","localStorage","getItem","setItem","store","getState","className","onSubmit","handleOut","name","href","onChange","onChangeSort_field","onChangeSort_direction","style","width","map","key","username","email","text","status","pageCount","Math","ceil","pageRangeDisplayed","marginPagesDisplayed","initialPage","onPageChange","handlePageChange","activeClassName","containerClassName","disabledClassName","React","Component","Create","reqBody","FormData","onChangeUsername","bind","onChangeEmail","onChangeText","handleSubmit","get","body","location","JSON","stringify","catch","set","Login","onChangePassword","Edit","find","elem","pathname","substr","onChangeStatus","deleteTask","App","exact","path","render","connect","actions","oldState","parse","err","console","log","loadState","createStore","action","subscribe","saveState","document","getElementById"],"mappings":"ieAAMA,EAAW,SAACC,GAChB,MAAO,CACLC,KAAM,YACND,UAIEE,EAAW,SAACC,GAChB,MAAO,CACLF,KAAM,YACNE,UAIEC,EAAc,SAACD,GACnB,MAAO,CACLF,KAAM,eACNE,UAIEE,EAAQ,SAACC,GACb,MAAO,CACLL,KAAM,SACNK,O,iBCmHWC,E,YAvIb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,KAAM,EACNC,WAAY,KACZC,eAAgB,MAChBC,KAAM,EAAKL,MAAMK,KACjBb,MAAO,EAAKQ,MAAMR,OAPH,E,iFAYjBc,KAAKC,e,iCAIIC,EAASC,EAAWC,GAAiB,IAAD,SACAJ,KAAKL,MAA1CC,EADqC,EACrCA,KAAMC,EAD+B,EAC/BA,WAAYC,EADmB,EACnBA,eACpBO,EAAa,sBAAkBF,GAAaN,GAC5CS,EAAiB,0BAAsBF,GAAiBN,GACxDS,EAAO,gBAAYL,GAAWN,GAC9BY,EAAG,uFAAmFH,GAAnF,OAAmGC,GAAnG,OAAuHC,GAChIE,MAAMD,EAAK,CACTE,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,SAAU,KACTC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,EAAKvB,MAAMT,SAASgC,EAAOC,QAAQhC,OACnC,EAAKiC,SAAS,CACZC,iBAAkBH,EAAOC,QAAQE,iBACjClC,MAAO+B,EAAOC,QAAQhC,WAG1B,SAACmC,GACCC,MAAMD,Q,uCAKGE,GACfvB,KAAKmB,SAAS,CAAEvB,KAAM2B,EAAWC,SAAW,IAC5CxB,KAAKC,WAAWsB,EAAWC,SAAW,K,yCAIrBC,GACjBzB,KAAKmB,SAAS,CAAEtB,WAAY4B,EAAEC,OAAOC,QACrC3B,KAAKC,WAAW,GAAIwB,EAAEC,OAAOC,S,6CAGRF,GACrBzB,KAAKmB,SAAS,CAAErB,eAAgB2B,EAAEC,OAAOC,QACzC3B,KAAKC,WAAW,GAAI,GAAIwB,EAAEC,OAAOC,S,kCAIjC3B,KAAKN,MAAMJ,cACX,IAAMsC,EAAeC,OAAOC,aAAaC,QAAQ,mBAC1CH,EAAavC,MACpBwC,OAAOC,aAAaE,QAAQ,WAAYJ,K,+BAMhC,IAAD,SACmC5B,KAAKL,MAAvCT,EADD,EACCA,MAAOkC,EADR,EACQA,iBAAkBxB,EAD1B,EAC0BA,KAC3BP,EAAQW,KAAKN,MAAMuC,MAAMC,WAAW7C,MAC1C,OACA,6BACE,yBAAK8C,UAAU,aACZ9C,EACD,0BAAM+C,SAAU,kBAAM,EAAKC,aAAaC,KAAK,OAC3C,2BAAOnD,KAAK,SAASwC,MAAM,oCAE3B,uBAAGY,KAAK,UAAR,kCAEF,mGACA,uBAAGA,KAAK,WAAR,yFACA,0BAAMD,KAAK,QACT,4BAAQE,SAAU,SAACf,GAAD,OAAO,EAAKgB,mBAAmBhB,IAAIa,KAAK,cACxD,4BAAQX,MAAM,MAAd,MACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,WAEF,4BAAQa,SAAU,SAACf,GAAD,OAAO,EAAKiB,uBAAuBjB,IAAIa,KAAK,kBAC5D,4BAAQX,MAAM,OAAd,yFACA,4BAAQA,MAAM,QAAd,mEAGJ,yBAAKgB,MAAO,CAAEC,MAAO,QAClB1D,GACCA,EAAM2D,KAAI,SAAA9C,GACR,OACE,yBAAK+C,IAAK/C,EAAKP,GAAI2C,UAAU,cAC3B,6BAAMpC,EAAKgD,UACX,6BAAMhD,EAAKiD,OACX,yBAAKb,UAAU,aAAapC,EAAKkD,MAEf,KAAhBlD,EAAKmD,OACH,qCACA,sCAGF7D,GACA,uBAAGkD,KAAI,gBAAWxC,EAAKP,KAAvB,mIAED,EAAKE,MAAMF,IAAMO,EAAKP,IACvB,4NASV,kBAAC,IAAD,CACE2D,UAAWC,KAAKC,KAAKjC,EAAmB,GACxCkC,mBAAoB,EACpBC,qBAAsB,EACtBC,YAAa5D,EAAO,EACpB6D,aAAc,SAAChC,GAAD,OAAO,EAAKiC,iBAAiBjC,IAC3CkC,gBAAgB,cAChBC,mBAAmB,YACnBC,kBAAkB,mB,GAjIRC,IAAMC,W,OC8EXC,E,YA7Eb,WAAYtE,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXsE,QAAS,IAAIC,UAGf,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBATH,E,4EAcdpE,KAAKL,MAAMsE,QAAQO,IAAI,aACzBxE,KAAKL,MAAMsE,QAAQO,IAAI,UACvBxE,KAAKL,MAAMsE,QAAQO,IAAI,QAI1B/D,MAAM,sFAAuF,CACzFC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,SAAU,GACV4D,KAAMzE,KAAKL,MAAMsE,UAElBnD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACAA,GAA4B,OAAlBA,EAAOiC,QACnB5B,MAAM,8EACNO,OAAO6C,SAASnC,KAAO,KAEvBjB,MAAMqD,KAAKC,UAAU3D,EAAOC,aAE7B2D,OAAM,SAAAxD,GACTC,MAAM,0IAA8BD,MAnBlCC,MAAM,wG,uCAuBKG,GAAI,IACXwC,EAAYjE,KAAKL,MAAjBsE,QACRA,EAAQa,IAAI,WAAYrD,EAAEC,OAAOC,OACjC3B,KAAKmB,SAAS,CAAE8C,QAASA,M,oCAGbxC,GAAI,IACRwC,EAAYjE,KAAKL,MAAjBsE,QACRA,EAAQa,IAAI,QAASrD,EAAEC,OAAOC,OAC9B3B,KAAKmB,SAAS,CAAE8C,QAASA,M,mCAGdxC,GAAI,IACPwC,EAAYjE,KAAKL,MAAjBsE,QACRA,EAAQa,IAAI,OAAQrD,EAAEC,OAAOC,OAC7B3B,KAAKmB,SAAS,CAAE8C,QAASA,M,+BAIvB,OACE,6BACE,iIACA,0BAAM7B,SAAUpC,KAAKuE,aAAcjC,KAAK,UACtC,kEACA,2BAAOE,SAAUxC,KAAKmE,mBACtB,yCACA,2BAAO3B,SAAUxC,KAAKqE,gBACtB,kEACA,2BAAO7B,SAAUxC,KAAKsE,eACtB,2BAAOnF,KAAK,SAASwC,MAAM,4DAE7B,uBAAGY,KAAK,KAAR,mF,GAxEauB,IAAMC,WCmEZgB,E,YAlEb,WAAYrF,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXsE,QAAS,IAAIC,UAGf,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKY,iBAAmB,EAAKA,iBAAiBZ,KAAtB,gBACxB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBARH,E,4EAYL,IAAD,OACRpE,KAAKL,MAAMsE,QAAQO,IAAI,aACzBxE,KAAKL,MAAMsE,QAAQO,IAAI,YAI1B/D,MAAM,qFAAsF,CACxFC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,SAAU,GACV4D,KAAMzE,KAAKL,MAAMsE,UAChBnD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAClBF,MAAK,SAAAG,GACAA,GAA4B,OAAlBA,EAAOiC,QACnB,EAAKxD,MAAMN,SAAS6B,EAAOC,QAAQ7B,OACnCwC,OAAO6C,SAASnC,KAAO,KAEvBjB,MAAMqD,KAAKC,UAAU3D,EAAOC,aAG/B2D,OAAM,SAAAxD,GAAK,OAAIC,MAAM,8IAlBpBA,MAAM,wG,uCAsBKG,GAAI,IACXwC,EAAYjE,KAAKL,MAAjBsE,QACRA,EAAQa,IAAI,WAAYrD,EAAEC,OAAOC,OACjC3B,KAAKmB,SAAS,CAAE8C,QAASA,M,uCAGVxC,GAAI,IACXwC,EAAYjE,KAAKL,MAAjBsE,QACRA,EAAQa,IAAI,WAAYrD,EAAEC,OAAOC,OACjC3B,KAAKmB,SAAS,CAAE8C,QAASA,M,+BAIvB,OACE,6BACE,kGACA,0BAAM7B,SAAUpC,KAAKuE,aAAcjC,KAAK,SACtC,kEACA,2BAAOE,SAAUxC,KAAKmE,mBACtB,wEACA,2BAAO3B,SAAUxC,KAAKgF,mBACtB,2BAAO7F,KAAK,SAASwC,MAAM,4DAE7B,uBAAGY,KAAK,KAAR,mF,GA7DYuB,IAAMC,WCmGXkB,E,YAnGb,WAAYvF,GAAQ,IAAD,uBACjB,4CAAMA,KAEDC,MAAQ,CACXsE,QAAS,IAAIC,UAGf,IAAMnE,EAAO,EAAKL,MAAMR,MAAMgG,MAAK,SAACC,GAClC,IAAM3F,EAAKqC,OAAO6C,SAASU,SAASC,OAAO,GAC3C,OAAOF,EAAK3F,IAAMA,KATH,OAWjB,EAAKG,MAAMI,KAAOA,EAElB,EAAKJ,MAAMsE,QAAQa,IAAI,SAAU/E,EAAKmD,QAEtC,EAAKoC,eAAiB,EAAKA,eAAelB,KAApB,gBACtB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBAjBH,E,mFAqBnBpE,KAAKN,MAAM6F,e,qCAGG,IACRtB,EAAYjE,KAAKL,MAAjBsE,QAEF5E,EADewC,OAAOC,aAAaC,QAAQ,YACtB1C,MAC3B4E,EAAQa,IAAI,QAASzF,GACnBoB,MAAM,2DAAD,OAA4DT,KAAKL,MAAMI,KAAKP,GAA5E,8BAA4G,CAC/GkB,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,SAAU,GACV4D,KAAMR,IACLnD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAClBF,MAAK,SAAAG,GACEA,GAA4B,OAAlBA,EAAOiC,QACnB5B,MAAM,mIACNO,OAAO6C,SAASnC,KAAO,MAEvBjB,MAAMqD,KAAKC,UAAU3D,EAAOC,UAC5BW,OAAO6C,SAASnC,KAAO,aAG1BsC,OAAM,SAAAxD,GACLC,MAAM,gJ,qCAIKG,GAAI,IACTwC,EAAYjE,KAAKL,MAAjBsE,QACRA,EAAQa,IAAI,SAAUrD,EAAEC,OAAOC,OAC/B3B,KAAKmB,SAAS,CAAE8C,QAASA,M,mCAGdxC,GAAI,IAAD,EACYzB,KAAKL,MAAvBsE,EADM,EACNA,QAASlE,EADH,EACGA,KACjBkE,EAAQa,IAAI,OAAQrD,EAAEC,OAAOC,OAC7B3B,KAAKmB,SAAS,CAAE8C,QAASA,IACzBjE,KAAKN,MAAMH,MAAMQ,EAAKP,M,+BAKd,IAAD,EACiBQ,KAAKL,MAAvBI,EADC,EACDA,KACFkD,EAFG,EACKgB,QACOO,IAAI,SAAWzE,EAAKkD,KACvC,OACE,6BACE,+JACA,6BACE,6BAAMlD,EAAKP,IACX,6BAAMO,EAAKgD,UACX,6BAAMhD,EAAKiD,QAEb,0BAAMZ,SAAUpC,KAAKuE,cACnB,kEACA,2BAAOpF,KAAK,OAAOmD,KAAK,OAAOE,SAAUxC,KAAKsE,aAAc3C,MAAOsB,IACnE,6GACiB,IAAhBlD,EAAKmD,OACN,4BAAQV,SAAUxC,KAAKsF,gBACrB,4BAAQ3D,MAAM,KAAd,SACA,4BAAQA,MAAM,MAAd,SAEF,4BAAQa,SAAUxC,KAAKsF,gBACrB,4BAAQ3D,MAAM,KAAd,SACA,4BAAQA,MAAM,KAAKH,UAAQ,GAA3B,SAGF,2BAAOrC,KAAK,SAASwC,MAAM,gGAE7B,uBAAGY,KAAK,KAAR,8EACE,6BAAMvC,KAAKN,MAAMuC,MAAMC,WAAW7C,Y,GA9FzByE,IAAMC,WCQnByB,G,uLACM,IAAD,OACP,OACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACjG,GAAD,OAAa,kBAAC,EAAU,EAAKA,UAC3D,kBAAC,IAAD,CAAO+F,OAAK,EAACC,KAAK,UAAUC,OAAQ,SAACjG,GAAD,OAAW,kBAAC,EAAW,EAAKA,UAChE,kBAAC,IAAD,CAAO+F,OAAK,EAACC,KAAK,YAAYC,OAAQ,SAACjG,GAAD,OAAW,kBAAC,EAAS,EAAKA,UAChE,kBAAC,IAAD,CAAO+F,OAAK,EAACC,KAAK,SAASC,OAAQ,SAACjG,GAAD,OAAW,kBAAC,EAAU,EAAKA,e,GAPtDoE,IAAMC,YAoBT6B,mBAPf,SAAyBjG,GACvB,MAAO,CACLT,MAAOS,EAAMT,MACbM,GAAIG,EAAMH,MAI0BqG,EAAzBD,CAAkCJ,GCC3CM,G,MAbY,WAChB,IACE,IAAMlE,EAAeC,OAAOC,aAAaC,QAAQ,YAC/C,IAAKH,EACH,OAEF,OAAO+C,KAAKoB,MAAMnE,GAClB,MAAOoE,GAEP,YADAC,QAAQC,IAAIF,IAKDG,IACXlE,EAAQmE,aC9BC,WAAyB,IAAxBzG,EAAuB,uDAAf,GAAI0G,EAAW,uCACrC,OAAQA,EAAOlH,MACb,IAAK,YACD,OAAO,eAAKQ,EAAZ,CAAmBT,MAAOmH,EAAOnH,QAErC,IAAK,YACH,OAAO,eAAKS,EAAZ,CAAmBN,MAAOgH,EAAOhH,QAEnC,IAAK,eACH,OAAKM,EAAMN,cAGJM,EAAMN,MACN,eAAKM,IAHH,eAAKA,GAKd,IAAK,SACH,OAAO,eAAKA,EAAZ,CAAmBH,GAAI6G,EAAO7G,KAElC,QACE,OAAOG,KDWsBmG,GAEnC7D,EAAMqE,WAAU,YAzBE,SAAC3G,GACjB,IACE,IAAMiC,EAAe+C,KAAKC,UAAUjF,GACpCkC,OAAOC,aAAaE,QAAQ,WAAYJ,GACxC,MAAOoE,GACPC,QAAQC,IAAIF,IAqBZO,CAAUtE,EAAMC,eAGpByD,iBACE,kBAAC,IAAD,CAAU1D,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAKA,MAAOA,MAGhBuE,SAASC,eAAe,W","file":"static/js/main.c7947495.chunk.js","sourcesContent":["const addTasks = (tasks) => {\r\n  return {\r\n    type: 'ADD_TASKS',\r\n    tasks,\r\n  }\r\n};\r\n\r\nconst addToken = (token) => {\r\n  return {\r\n    type: 'ADD_TOKEN',\r\n    token,\r\n  }\r\n};\r\n\r\nconst deleteToken = (token) => {\r\n  return {\r\n    type: 'DELETE_TOKEN',\r\n    token,\r\n  }\r\n};\r\n\r\nconst addId = (id) => {\r\n  return {\r\n    type: 'ADD_ID',\r\n    id,\r\n  }\r\n};\r\n \r\nexport { addToken, deleteToken, addTasks, addId };\r\n","import React from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nclass Tasks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      page: 1,\r\n      sort_field: 'id',\r\n      sort_direction: 'asc',\r\n      task: this.props.task,\r\n      tasks: this.props.tasks,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.fetchTasks();\r\n    \r\n  }\r\n  \r\n  fetchTasks(actPage, sortField, sortDirection ) {\r\n    const { page, sort_field, sort_direction } = this.state;\r\n    const sort_fieldUrl = `&sort_field=${sortField || sort_field}`;\r\n    const sort_directionUrl = `&sort_direction=${sortDirection || sort_direction}`;\r\n    const pageUrl = `&page=${actPage || page}`;\r\n    const url = `https://uxcandy.com/~shapoval/test-task-backend/v2/?developer=VladimirOleynik${sort_fieldUrl}${sort_directionUrl}${pageUrl}`;\r\n    fetch(url, {\r\n      method: 'GET',\r\n      mode: 'cors', \r\n      cache: 'no-cache', \r\n      referrer: '',\r\n    }).then(res => res.json())\r\n      .then(result => {\r\n          this.props.addTasks(result.message.tasks);\r\n          this.setState({\r\n            total_task_count: result.message.total_task_count,\r\n            tasks: result.message.tasks\r\n          });\r\n        },\r\n        (error) => {\r\n          alert(error);\r\n        }\r\n      );\r\n  }\r\n  \r\n  handlePageChange(pageNumber) {\r\n    this.setState({ page: pageNumber.selected + 1 });\r\n    this.fetchTasks(pageNumber.selected + 1);\r\n  \r\n  }\r\n   \r\n  onChangeSort_field(e) {\r\n    this.setState({ sort_field: e.target.value });\r\n    this.fetchTasks('', e.target.value);\r\n  }\r\n  \r\n  onChangeSort_direction(e) {\r\n    this.setState({ sort_direction: e.target.value });  \r\n    this.fetchTasks('', '', e.target.value);\r\n  }\r\n  \r\n  handleOut() {\r\n    this.props.deleteToken();\r\n    const currentState = window.localStorage.getItem('appState');\r\n    delete currentState.token;\r\n    window.localStorage.setItem('appState', currentState);\r\n    \r\n  }\r\n\r\n\r\n  \r\n  render() {\r\n    const { tasks, total_task_count, page } = this.state;\r\n    const token = this.props.store.getState().token;\r\n    return (\r\n    <div>\r\n      <div className=\"data-item\">\r\n        {token ?\r\n        <form onSubmit={() => this.handleOut()} name=\"out\">\r\n          <input type=\"submit\" value=\"Выйти\"/>\r\n        </form> :\r\n          <a href=\"/login\">Войти</a>\r\n        }\r\n        <h3>Список Задач</h3>\r\n        <a href=\"/create\">Добавить задачу</a>\r\n        <form name=\"sort\">\r\n          <select onChange={(e) => this.onChangeSort_field(e)} name=\"sort_field\">\r\n            <option value=\"id\">id</option> \r\n            <option value=\"username\">username</option>\r\n            <option value=\"email\">email</option>\r\n            <option value=\"status\">status</option>\r\n          </select>\r\n          <select onChange={(e) => this.onChangeSort_direction(e)} name=\"sort_direction\">\r\n            <option value=\"asc\">по возрастанияю</option> \r\n            <option value=\"desc\">по убыванию</option>\r\n          </select>\r\n        </form>\r\n        <div style={{ width: '50%' }}> \r\n          {tasks &&\r\n            tasks.map(task => {\r\n              return (\r\n                <div key={task.id} className=\"tasks-item\">\r\n                  <div>{task.username}</div>\r\n                  <div>{task.email}</div>\r\n                  <div className=\"text-item\">{task.text}</div>\r\n                  {\r\n                    task.status === 10 ? \r\n                      <div>Done</div> :\r\n                      <div>To do</div>\r\n                  }\r\n                  {\r\n                    token &&\r\n                    <a href={`/edit/${task.id}`}>Отредактировать задачу</a>\r\n                  }\r\n                  {this.props.id == task.id &&\r\n                  <div>Отредактировано Администратором</div>\r\n                  \r\n                  }\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n        <ReactPaginate\r\n          pageCount={Math.ceil(total_task_count / 3)}\t\r\n          pageRangeDisplayed={2}\t\r\n          marginPagesDisplayed={1}\r\n          initialPage={page - 1}\r\n          onPageChange={(e) => this.handlePageChange(e)}\r\n          activeClassName=\"active-page\"\r\n          containerClassName=\"Paginaton\"\r\n          disabledClassName=\"prev-next\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n    \r\nexport default Tasks; \r\n","import React from 'react';\r\n\r\n\r\nclass Create extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      reqBody: new FormData(),\r\n    };\r\n    \r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\nhandleSubmit() {\r\n  if (!this.state.reqBody.get('username') ||\r\n    !this.state.reqBody.get('email') ||\r\n    !this.state.reqBody.get('text')) {\r\n      alert('Заполните все поля');\r\n      return;\r\n  }\r\n  fetch('https://uxcandy.com/~shapoval/test-task-backend/v2/create?developer=VladimirOleynik', {\r\n      method: 'POST',\r\n      mode: 'cors', \r\n      cache: 'no-cache', \r\n      referrer: '',\r\n      body: this.state.reqBody,\r\n    })\r\n    .then(res => res.json())\r\n    .then(result => {\r\n      if (result && result.status === 'ok') {\r\n        alert('Задача cоздана');\r\n        window.location.href = '/'\r\n      } else {\r\n        alert(JSON.stringify(result.message))\r\n      }\r\n    }).catch(error => {\r\n    alert('Ошибка попробуйте еще раз' + error);\r\n  });\r\n }\r\n\r\nonChangeUsername(e) {\r\n  const { reqBody } = this.state;\r\n  reqBody.set('username', e.target.value);\r\n  this.setState({ reqBody: reqBody });  \r\n}\r\n\r\nonChangeEmail(e) {\r\n  const { reqBody } = this.state;\r\n  reqBody.set('email', e.target.value);\r\n  this.setState({ reqBody: reqBody });\r\n}\r\n\r\nonChangeText(e) {\r\n  const { reqBody } = this.state;\r\n  reqBody.set('text', e.target.value);\r\n  this.setState({ reqBody: reqBody });\r\n}\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Добавление задачи</h3>\r\n        <form onSubmit={this.handleSubmit} name=\"create\">\r\n          <label>Логин:</label>\r\n          <input onChange={this.onChangeUsername} />\r\n          <label>Email:</label>\r\n          <input onChange={this.onChangeEmail} />\r\n          <label>Текст:</label>\r\n          <input onChange={this.onChangeText} />\r\n          <input type=\"submit\" value=\"Отправить\" />\r\n        </form>\r\n        <a href=\"/\">К списку задач</a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Create;\r\n","import React from 'react';\r\n\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      reqBody: new FormData(),\r\n    };\r\n    \r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\nhandleSubmit() {\r\n  if (!this.state.reqBody.get('username') ||\r\n    !this.state.reqBody.get('password')) {\r\n      alert('Заполните все поля');\r\n      return;\r\n  }\r\n  fetch('https://uxcandy.com/~shapoval/test-task-backend/v2/login?developer=VladimirOleynik', {\r\n      method: 'POST',\r\n      mode: 'cors', \r\n      cache: 'no-cache', \r\n      referrer: '',\r\n      body: this.state.reqBody,\r\n    }).then(res => res.json())\r\n    .then(result => {\r\n      if (result && result.status === 'ok') {\r\n        this.props.addToken(result.message.token);\r\n        window.location.href = '/'\r\n      } else {\r\n        alert(JSON.stringify(result.message));\r\n      }\r\n    })\r\n    .catch(error => alert('Ошибка попробуйте еще раз'));\r\n  \r\n }\r\n\r\nonChangeUsername(e) {\r\n  const { reqBody } = this.state;\r\n  reqBody.set('username', e.target.value);\r\n  this.setState({ reqBody: reqBody });  \r\n}\r\n\r\nonChangePassword(e) {\r\n  const { reqBody } = this.state;\r\n  reqBody.set('password', e.target.value);\r\n  this.setState({ reqBody: reqBody });\r\n}\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Авторизация</h3>\r\n        <form onSubmit={this.handleSubmit} name=\"login\">\r\n          <label>Логин:</label>\r\n          <input onChange={this.onChangeUsername} />\r\n          <label>Пароль:</label>\r\n          <input onChange={this.onChangePassword} />\r\n          <input type=\"submit\" value=\"Отправить\" />\r\n        </form>\r\n        <a href=\"/\">К списку задач</a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nclass Edit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      reqBody: new FormData(),\r\n    };\r\n    \r\n    const task = this.props.tasks.find((elem) => {\r\n      const id = window.location.pathname.substr(6);\r\n      return elem.id == id;\r\n    });\r\n    this.state.task = task;\r\n    \r\n    this.state.reqBody.set('status', task.status);\r\n    \r\n    this.onChangeStatus = this.onChangeStatus.bind(this);\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  \r\ncomponentDidUnmount() {\r\n  this.props.deleteTask();\r\n}\r\n  \r\nhandleSubmit() {\r\nconst { reqBody } = this.state;\r\nconst currentState = window.localStorage.getItem('appState');\r\nconst token = currentState.token;\r\nreqBody.set('token', token);\r\n  fetch(`https://uxcandy.com/~shapoval/test-task-backend/v2/edit/${this.state.task.id}?developer=VladimirOleynik`, {\r\n    method: 'POST',\r\n    mode: 'cors', \r\n    cache: 'no-cache', \r\n    referrer: '',\r\n    body: reqBody,\r\n  }).then(res => res.json())\r\n  .then(result => {\r\n      if (result && result.status === 'ok') {\r\n        alert('Задача отредактирована');\r\n        window.location.href = '/'\r\n      } else {\r\n        alert(JSON.stringify(result.message));\r\n        window.location.href = '/login';\r\n      }\r\n    })\r\n    .catch(error => {\r\n      alert('Ошибка попробуйте еще раз');\r\n    });\r\n   }\r\n  \r\n  onChangeStatus(e) {\r\n    const { reqBody } = this.state;\r\n    reqBody.set('status', e.target.value);\r\n    this.setState({ reqBody: reqBody });\r\n  }\r\n  \r\n  onChangeText(e) {\r\n    const { reqBody, task } = this.state;\r\n    reqBody.set('text', e.target.value);\r\n    this.setState({ reqBody: reqBody });\r\n    this.props.addId(task.id);\r\n  }\r\n  \r\n  \r\n  \r\n  render() {\r\n  const { task, reqBody } = this.state;\r\n  const text = reqBody.get('text') || task.text;\r\n    return (\r\n      <div>\r\n        <h3>Отредактировать Задачу</h3>\r\n        <div>\r\n          <div>{task.id}</div>\r\n          <div>{task.username}</div>\r\n          <div>{task.email}</div>\r\n        </div>\r\n        <form onSubmit={this.handleSubmit} >\r\n          <label>Текст:</label>\r\n          <input type=\"text\" name=\"text\" onChange={this.onChangeText} value={text}/>\r\n          <label>Статус задачи:</label>\r\n          {task.status === 0 ?\r\n          <select onChange={this.onChangeStatus}>\r\n            <option value=\"0\">To do</option>\r\n            <option value=\"10\">Done</option>\r\n          </select> :\r\n          <select onChange={this.onChangeStatus}>\r\n            <option value=\"0\">To do</option>\r\n            <option value=\"10\" selected>Done</option>\r\n          </select>\r\n          }\r\n          <input type=\"submit\" value=\"Отредактировать\" />\r\n        </form>\r\n        <a href=\"/\">К списку задач</a>\r\n          <div>{this.props.store.getState().token}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Edit; \r\n        \r\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport * as actions from './actions';\nimport Tasks from './tasks'\nimport Create from './create'\nimport Login from './login'\nimport Edit from './edit'\nimport './App.css'\n\nclass App extends React.Component {\n  render() {\n    return (\n        <Switch>\n          <Route exact path=\"/\" render={(props) => ( <Tasks {...this.props}/>)} />\n          <Route exact path=\"/create\" render={(props) => <Create {...this.props} />} />\n          <Route exact path=\"/edit/:id\" render={(props) => <Edit {...this.props} />} />\n          <Route exact path=\"/login\" render={(props) => <Login {...this.props} />} />\n        </Switch>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.tasks,\n    id: state.id,\n  };\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducer';\nimport App from './App'\nimport './index.css'\n\nconst saveState = (state) => {\n  try {\n    const currentState = JSON.stringify(state);\n    window.localStorage.setItem('appState', currentState);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst loadState = () => {\n  try {\n    const currentState = window.localStorage.getItem('appState');\n      if (!currentState) {\n        return undefined;\n      }\n      return JSON.parse(currentState);\n    } catch (err) {\n      console.log(err);\n      return undefined;\n    }\n};\n\nconst oldState = loadState();\nconst store = createStore(reducer, oldState);\n\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App store={store}/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {      \r\n    case 'ADD_TASKS':\r\n        return { ...state, tasks: action.tasks };\r\n\r\n    case 'ADD_TOKEN':\r\n      return { ...state, token: action.token };\r\n\r\n    case 'DELETE_TOKEN':\r\n      if (!state.token) {\r\n        return { ...state }\r\n      }\r\n      delete state.token;\r\n      return { ...state };\r\n      \r\n      case 'ADD_ID':\r\n        return { ...state, id: action.id };\r\n          \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"sourceRoot":""}